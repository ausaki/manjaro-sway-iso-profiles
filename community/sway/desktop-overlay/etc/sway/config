set $mod Mod4

###### sway style ######

floating_maximum_size -1 x -1
floating_minimum_size 600 x 300 
# tabbed stacking   
#workspace_layout default 
title_align center
default_border none
workspace_auto_back_and_forth yes
focus_on_window_activation focus

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 12
client.focused #445874 #2C394B #ffffff #ffffff #2C3948
client.urgent #445874 #A12568 #ffffff #ffffff #2C3948
client.unfocused #082032 #082032 #8f8f8f #8f8f8f #082032 
client.focused_inactive #445874 #2C394B #ffffff #ffffff #2C3948

###### statusbar style ######

bar {
    swaybar_command waybar
    status_command i3status
    position bottom
    tray_output primary
    font pango:DejaVu Sans Mono 10
    workspace_min_width 40
    colors {
        background #2C394B
        active_workspace #445874 #445874 #ffffff
        focused_workspace #445874 #445874 #ffffff
        inactive_workspace #445874 #2c394b #8f8f8f
        urgent_workspace #445874 #A12568 #ffffff

    }
}

###### settings for sway-gaps ######

# Set inner/outer gaps
gaps inner 2
gaps outer 2

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

###### auto start applications ######

# adjust layout
assign [class="Code"]  2
assign [app_id="Code"]  2
assign [class="firefox"] 3
assign [app_id="firefox"] 3
assign [class="Chromium"] 4
assign [app_id="chromium"] 4
assign [class="Feishu"]  5
assign [class="Slack"]  5
assign [class="KeeWeb"] 6
assign [app_id="keeWeb"] 6
assign [class="Clash for Windows"] 6
assign [class="Pcmanfm"] 7

exec xrdb -load ~/.Xresources

# Open specific applications in floating mode
for_window [class="Pamac-manager"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [app_id="pavucontrol"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="(?i)System-config-printer.py"] floating enable border normal
for_window [class="(?i)virtualbox"] floating enable
for_window [class="firefox" instance="Places"] floating enable
for_window [app_id="firefox" title="Library"] floating enable
for_window [class="Blueman-manager"] floating enable
for_window [app_id="blueman-manager"] floating enable
for_window [class="gnome-terminal"] border none
for_window [class="solaar"] floating enable
for_window [app_id="solaar"] floating enable
for_window [app_id="nm-connection-editor"] floating enable
###### shortcuts ######

floating_modifier $mod

# Screen brightness controls
bindsym XF86MonBrightnessUp exec "light -A 10"
bindsym XF86MonBrightnessDown exec "light -U 10"

# start a terminal
bindsym $mod+Return exec gnome-terminal

# kill focused window
bindsym $mod+Shift+q kill

# A more modern dmenu replacement is rofi:
bindsym $mod+d exec --no-startup-id rofi -show drun

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
bindsym $mod+shift+backslash split h

# split in vertical orientation
bindsym $mod+shift+minus split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Ctrl+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# move the currently focused window to the scratchpad
bindsym $mod+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+plus scratchpad show

# dunst
bindsym $mod+quotedbl exec dunstctl close
bindsym $mod+Shift+quotedbl exec dunstctl close-all 

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+bracketright workspace next
bindsym $mod+bracketleft workspace prev
bindsym mod1+Tab workspace back_and_forth
bindsym $mod+Tab exec rofi -show "window" 

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# move to workspace with focused container
bindsym $mod+Ctrl+1 move container to workspace number $ws1; workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace number $ws2; workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace number $ws3; workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace number $ws4; workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace number $ws5; workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace number $ws6; workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace number $ws7; workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace number $ws8; workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace number $ws9; workspace $ws9
bindsym $mod+Ctrl+0 move container to workspace number $ws10; workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart sway inplace (preserves your layout/session, can be used to upgrade sway)
bindsym $mod+Shift+r restart
# exit sway (logs you out of your X session)
bindsym $mod+Shift+e exec "swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway?' -B 'Yes' 'swaymsg exit'"

# resize window (you can also use the mouse for that)
set $step 20
mode "resize" {
        bindsym h resize shrink width $step px or step ppt
        bindsym j resize grow height $step px or $step ppt
        bindsym k resize shrink height $step px or $step ppt
        bindsym l resize grow width $step px or $step ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width $step px or $step ppt
        bindsym Down resize grow height $step px or $step ppt
        bindsym Up resize shrink height $step px or $step ppt
        bindsym Right resize grow width $step px or $step ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

set $mode_system (l)ock, (e)xit, (s)uspend, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id swctl lock, mode "default"
    bindsym s exec --no-startup-id swctl suspend, mode "default"
    bindsym e exec --no-startup-id swctl logout, mode "default"
    bindsym r exec --no-startup-id swctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id swctl shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+control+grave mode "$mode_system"

set $mode_utils u(move all workspace up) d(move all workspace down) w(setup workspace layout) p(set_display) k(set keyboard)
mode "$mode_utils" {
    bindsym u exec --no-startup-id swctl move_all_workspace_up
    bindsym d exec --no-startup-id swctl move_all_workspace_down
    bindsym w exec --no-startup-id swctl setup_workspace 
    bindsym p exec --no-startup-id swctl set_display
    bindsym k exec --no-startup-id swctl set_keyboard

    bindsym Escape mode "default"
}
bindsym $mod+u mode "$mode_utils"

mode "volume" {
    bindsym v exec --no-startup-id pavucontrol
    bindsym m exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle 
    bindsym b exec --no-startup-id pactl set-default-sink bluez_sink.80_7B_3E_6A_8B_3F.handsfree_head_unit && pactl set-default-source bluez_source.80_7B_3E_6A_8B_3F.handsfree_head_unit
    bindsym Up exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
    bindsym k exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
    bindsym Down exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
    bindsym j exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
    bindsym Escape mode "default"
}
bindsym $mod+n mode "volume" 
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec -no-startup-id actl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%

mode "move_workspace" {
    bindsym Up move workspace to output up
    bindsym Down move workspace to output down
    bindsym Left move workspace to output left
    bindsym Right move workspace to output right
    bindsym j move workspace to output down
    bindsym k move workspace to output up
    bindsym h move workspace to output left
    bindsym l move workspace to output right

    bindsym Escape mode "default"
}
bindsym $mod+m mode "move_workspace" 

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
    bindsym o      mode "$mode_gaps_outer"
    bindsym i      mode "$mode_gaps_inner"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
    bindsym plus  gaps inner current plus 5
    bindsym minus gaps inner current minus 5
    bindsym 0     gaps inner current set 0

    bindsym Shift+plus  gaps inner all plus 5
    bindsym Shift+minus gaps inner all minus 5
    bindsym Shift+0     gaps inner all set 0

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
    bindsym plus  gaps outer current plus 5
    bindsym minus gaps outer current minus 5
    bindsym 0     gaps outer current set 0

    bindsym Shift+plus  gaps outer all plus 5
    bindsym Shift+minus gaps outer all minus 5
    bindsym Shift+0     gaps outer all set 0

    bindsym Return mode "default"
    bindsym Escape mode "default"
}


# take screenshot by grimshot
bindsym $mod+c exec --no-startup-id grimshot --notify copy area
set $mode_screenshot take screenshot: (w)indow, (r)egion
mode "$mode_screenshot" {
    bindsym w exec --no-startup-id grimshot --notify copy active, mode "default"
    bindsym r exec --no-startup-id grimshot --notify copy area, mode "default"
    bindsym shift+w exec --no-startup-id grimshot --notify save active, mode "default"
    bindsym shift+r exec --no-startup-id grimshot --notify save area, mode "default" 

    bindsym escape mode "default"
}
bindsym $mod+x mode "$mode_screenshot"


###### Output configuration ######
# You can get the names of your outputs by running: swaymsg -t get_outputs

output * bg /usr/share/backgrounds/archlinux_background.png fill
output  'Samsung Electric Company LU28R55 H4ZRA03506' scale 1.5

###### Idle configuration ######

# exec_always swayidle -w \
#    timeout 600 'swaylock' \
#    timeout 900 'swaymsg "output * dpms off"' \
#    resume 'swaymsg "output * dpms on"' \
#    before-sleep 'swaylock'

###### Input configuration ######
# You can get the names of your inputs by running: swaymsg -t get_inputs

input "type:touchpad" {
    dwt enabled
    tap enabled
    drag enabled
    middle_emulation enabled
}

input "type:keyboard" {
    xkb_options "ctrl:nocaps"
}

include /etc/sway/config.d/*
